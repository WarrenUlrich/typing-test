"use strict";const r=await fetch("/data").then(n=>n.json()).then(n=>n.data);export default class s{originalText;startTime;endTime;typedText;constructor(t){this.originalText=t,this.startTime=null,this.endTime=null,this.typedText=""}handleInput(t){return this.startTime===null&&(this.startTime=new Date),t.key==="Backspace"?this.typedText=this.typedText.slice(0,-1):this.typedText+=t.key,this.done()&&(this.endTime=new Date),!0}reset(){this.startTime=null,this.endTime=null,this.typedText=""}getOriginalText(){return this.originalText}getTypedText(){return this.typedText}calculateWpm(){if(!this.startTime||!this.endTime)return null;const t=(this.endTime.getTime()-this.startTime.getTime())/6e4;return this.typedText.split(" ").length/t}done(){return this.typedText==this.originalText}getAccuracy(){if(!this.typedText)return null;let t=0;const e=this.typedText.split(" "),i=this.originalText.split(" ");return e.forEach((l,a)=>{l!==i[a]&&t++}),(e.length-t)/e.length*100}static async randomWordTest(t){let e="";for(let i=0;i<t;i++)e+=r[Math.floor(Math.random()*r.length)],i<t-1&&(e+=" ");return new s(e)}}
